{"version":3,"sources":["utils/index.js","components/Login/Login.js","components/Register/Register.js","components/Logout/Logout.js","img/upload.png","img/certificates.png","components/Dashboard/Dashboard.js","components/AdminDashboard/PieChart.js","components/AdminDashboard/LevelBarChart.js","components/AdminDashboard/NameBarChart.js","utils/stats.js","components/AdminDashboard/AdminDashboard.js","components/AdminNavbar/index.js","components/Home/Home.js","utils/CustomSelect.js","components/Upload/Upload.js","components/Certificate/Certificate.js","components/Profile/Profile.js","img/user.jpg","utils/delete.js","components/Users/Users.js","components/AdminHome/AdminHome.js","components/AdminAllCerts/AdminAllCerts.js","components/UserCertificates/UserCertificates.js","components/SendMail/SendMail.js","routes/PrivateRoute.js","routes/PublicRoute.js","routes/AdminRoute.js","components/AdminExpired/AdminExpired.js","components/AdminExpiring/AdminExpiring.js","components/AdminQuiz/SetQuiz.js","components/UserQuiz/QuizHome.js","components/UserQuiz/Quiz.js","App.js","index.js"],"names":["TOKEN_KEY","isAdmin","user","window","localStorage","getItem","logout","removeItem","isLogin","Login","useState","email","setEmail","password","setPassword","error","setError","history","useHistory","handleSubmit","e","a","preventDefault","usercred","axios","post","then","response","console","log","status","JSON","stringify","data","setItem","token","user_type","push","catch","Object","entries","forEach","key","value","charAt","toUpperCase","slice","className","style","marginBottom","fontSize","id","onSubmit","htmlFor","type","name","onChange","target","required","to","textDecoration","color","Register","empid","setEmpid","setName","step","Logout","setIsLoggedin","onClick","options","headers","alert","margin","position","top","right","Home","src","uploadImg","alt","profileImg","PieChart","props","labels","datasets","label","cspTotal","backgroundColor","borderColor","borderWidth","width","height","scales","xAxes","gridLines","display","ticks","yAxes","LevelBarChart","levelNames","levelTotal","responsive","beginAtZero","stepSize","certNames","certNamesTotal","gcpLevelNames","awsLevelNames","azureLevelNames","awsCertNames","azureCertNames","gcpCertNames","AdminDashboard","usersList","setUsersList","usersTotal","setUsersTotal","certsTotal","setCertsTotal","setCspTotal","CSP","setCSP","SBU","setSBU","gcpLevelTotal","setGcpLevelTotal","awsLevelTotal","setAwsLevelTotal","azureLevelTotal","setAzureLevelTotal","GCPCertNamesTotal","setGCPCertNamesTotal","AWSCertNamesTotal","setAWSCertNamesTotal","AzureCertNamesTotal","setAzureCertNamesTotal","useEffect","body","GCP","AWS","Azure","cspCount","GCP_count","AWS_count","Azure_count","awsLevelCount","AWS_foundational","AWS_foundational_count","AWS_associate","AWS_associate_count","AWS_professional","AWS_professional_count","AWS_specialty","AWS_speciality_count","gcpLevelCount","GCP_assocaite","GCP_associate_count","GCP_professional","GCP_professional_count","azureLevelCount","Azure_fundamentals","Azure_fundamentals_count","Azure_professional","Azure_professional_count","Azure_expert","Azure_expert_count","awsCerts","AWS_foundational_certs","AWS_AWScertifiedcloudpractitioner","AWS_associate_certs","AWS_AWScertifieddeveloper","AWS_AWScertifiedsolutionsarchitect","AWS_AWScertifiedsysopsadministrator","AWS_professional_certs","AWS_AWScertifieddevopsengineer","AWS_speciality_certs","AWS_AWScertifiedadvancednetworking","AWS_AWScertifiedalexaskillbuilder","AWS_AWScertifieddataanalytics","AWS_AWScertifieddatabase","AWS_AWScertifiedmachinelearning","AWS_AWScertifiedsecurity","gcpCerts","GCP_associate_certs","GCP_associatecloudengineer","GCP_professional_certs","GCP_professionalcloudarchitect","GCP_professionalclouddeveloper","GCP_professionalclouddevopsengineer","GCP_professionalcloudnetworkengineer","GCP_professionalcloudsecurityengineer","GCP_professionalcollaborationengineer","azureCerts","Azure_foundational_certs","Azure_professional_certs","Azure_microsoftcertifiedazureadministrator","Azure_microsoftcertifiedazureaiengineer","Azure_microsoftcertifiedazuredatabaseadministrator","Azure_microsoftcertifiedazuredataengineer","Azure_microsoftcertifiedazuredatascientist","Azure_microsoftcertifiedazuredeveloper","Azure_microsoftcertifiedazuresecurityengineer","Azure_expert_certs","Azure_microsoftcertifiedcertifiedazuredevopsengineer","Azure_microsoftcertifiedsolutionsarchitect","users_count","length","certificates_count","getStats","defaultValue","pathname","state","sbu","NameBarChart","AdminNavbar","Navbar","bg","variant","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","Divider","Dashboard","CustomSelect","cspselected","setCSPSelected","levelselected","setLevelSelected","Associate","Professional","Foundational","Specialty","Fundamentals","Expert","csp","level","certnames","certlevels","keys","map","el","setCert","Upload","certlevel","certname","certid","dateofcert","expiry","certFile","userCertDetails","setuserCertDetails","formData","FormData","append","document","getElementById","reset","placeholder","files","Certificate","loc","useLocation","difDate","d2","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","date1","diffTime","Math","ceil","certs","cert","i","expiry_date","pdf_url","notifySingle","marginLeft","deleteCertificate","cursor","Profile","getCerts","getAllCerts","get","allCerts","marginTop","delete","location","reload","Users","allUsers","setAllUsers","userids","getAllUsers","userImg","userid","handleProfileClick","deleteUser","Array","AdminHome","AdminAllCerts","getUserCerts","UserCertificates","match","params","user_id","SendMail","message","setMessage","msg","rows","cols","PrivateRoute","Component","component","rest","render","PublicRoute","restricted","AdminRoute","AdminExpired","isLoading","setIsLoading","setTimeout","AdminExpiring","expiryThreshold","setExpiryThreshold","isClicked","setIsClicked","isbtntrigger","setIsBtnTrigger","certids","setCertids","notifyAll","Number","questionsegment","resid","SetQuiz","quizForm","setQuizForm","category","setCategory","subCategory","setSubCategory","description","setDescription","timelimit","setTimelimit","marks","setMarks","totalques","setTotalQues","questions","setQuestions","responseid","setResponseId","clearquestionfields","setquestiontext","setexplanationtext","setSingleOptionAnswer","setMultipleanswerA","setMultipleanswerB","setMultipleanswerC","setMultipleanswerD","questiontext","explanationtext","qtype","setQType","quesno","setQuesNo","singleoptionanswer","multipleanswerA","multipleanswerB","multipleanswerC","multipleanswerD","addjson","handleques","event","optiontype","text","explanation","question_type","choices","correctA","querySelector","checked","correctB","correctC","correctD","is_correct","quizid","err","action","categ","min","max","quiz","subcategory","total_questions","QuizHome","tests","setTests","test","Quiz","useParams","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","startQuiz","setStartQuiz","answerOption","isCorrect","nextQuestion","handleAnswerOptionClick","App","path","exact","ReactDOM"],"mappings":"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","file":"static/js/main.d56d7536.chunk.js","sourcesContent":["import axios from 'axios'\nconst TOKEN_KEY = 'token';\n\n// const getUser = async(token) => {\n    \n//     const url='https://credify.tk/user'\n//     var options = {\n//       headers: { \n//         'Authorization': `TOKEN ${token}` \n//       }\n//     };\n//     const response = await axios.get(url,options);\n//     return response.status; \n    \n// }\n\nexport const isAdmin = () => {\n    const user = window.localStorage.getItem('user');\n    const token = window.localStorage.getItem(TOKEN_KEY)\n    if(token && user==='admin')\n        return true;\n    return false;\n}\n\nexport const logout = () => {\n    window.localStorage.removeItem(TOKEN_KEY);\n    window.localStorage.removeItem('user');\n}\n\nexport const isLogin = () => {\n    const token = window.localStorage.getItem(TOKEN_KEY)\n    // console.log(Promise.resolve(getUser(token)));\n    \n    if(token )                 \n        return true;\n    else\n        return false;\n}\n\n","import React,{useState} from 'react'\nimport {Link} from 'react-router-dom'\nimport axios from 'axios'\nimport { useHistory } from \"react-router-dom\";\nimport {isAdmin} from \"../../utils/index\"\n\nimport './login.css'\nimport '../../css/Button.css'\n\n\nconst Login = () => {\n  const [email,setEmail] = useState('');\n  const [password,setPassword] = useState('');\n  const [error,setError] = useState('');\n\n  let history = useHistory();\n  const handleSubmit = async(e) =>{\n    e.preventDefault();\n    const usercred ={email,password};\n    const url= \"https://credify.tk/login\";\n    axios.post(url,usercred)\n      .then(function (response) {\n        console.log(response.status);\n        console.log(JSON.stringify(response.data.user));\n\n        // localstorage \n        window.localStorage.setItem('token',response.data.token);\n        window.localStorage.setItem('user',response.data.user.user_type);\n        if(isAdmin()){\n          console.log('Its the Admin');\n          history.push('/admindash')\n        }\n        else{\n          console.log('Its an User');\n          history.push('/dashboard')  \n        }\n        \n      })\n      .catch(function (error) {\n        console.log(error.response.status,error.response.data.email);\n        Object.entries(error.response.data).forEach(([key,value]) => {\n          setError(`${key.charAt(0).toUpperCase() + key.slice(1)} : ${value[0]}`);\n        })\n      });\n  }\n\n\n\n  return (\n    <div className=\"container\">\n    <h1 style={{marginBottom: '60px',fontSize:'35px'}}>Credify</h1>\n      <div className=\"card card-3\">\n      <h2 style={{marginBottom:'30px'}}>Sign in to your account</h2>\n      <form id='authform' onSubmit={handleSubmit}>\n        <label htmlFor=\"Email\">Email</label>\n        <input \n          className='tinput'\n          type='email' \n          name='Email' \n          value={email}\n          onChange={(e)=>setEmail(e.target.value)}\n          required/>\n        <label htmlFor=\"Password\">Password</label>\n        <input \n          className='tinput'\n          type='password' \n          name='Password' \n          value={password}\n          onChange={(e)=>setPassword(e.target.value)}\n          required/>\n        <input type='submit' value='Sign In' className='submit'/>\n      </form>\n      <Link to=\"/register\" style={{ textDecoration: 'none' }}>\n        <button type='button' className='submit' style={{fontSize:'18px'}}>\n      Create Account\n      </button>\n      </Link>\n      {\n        error ? <p style={{color:\"red\"}}> {error} </p> : ''\n      }\n      </div>\n    </div>\n  );\n}\n\n\n\nexport default Login;","import React,{useState,useEffect} from 'react'\nimport axios from 'axios'\nimport { useHistory } from \"react-router-dom\";\nimport '../../css/Button.css'\nimport '../Login/login.css'\n\nconst Register = () => {\n  const [empid,setEmpid] = useState(0);\n  const [name,setName] = useState('');\n  const [email,setEmail] = useState('');\n  const [password,setPassword] = useState('');\n  const [error,setError] = useState('');\n\n  const history = useHistory();\n\n  const handleSubmit = (e) =>{\n    \n    e.preventDefault();\n    const usercred = {empid, name, email, password};\n    console.log('Register Button clicked');\n    \n    const url= \"https://credify.tk/register\";\n    axios.post(url,usercred)\n      .then(function (response) {\n        console.log(JSON.stringify(response.data));\n        history.push('/login');\n      })\n      .catch(function (error) {\n        console.log(error.response.status,error.response.data.email);\n        Object.entries(error.response.data).forEach(([key,value]) => {\n          setError(`${key.charAt(0).toUpperCase() + key.slice(1)} : ${value[0]}`);\n        })\n      });\n  }\n  \n  return (\n    <div className=\"container\">\n    <h1 style={{marginBottom:'60px',fontSize:'35px'}}>Credify</h1>\n      <div className=\"card card-3\">\n        <h2 style={{marginBottom:'30px'}}>Create your Credify account</h2>\n        <form onSubmit={handleSubmit}>\n          <label htmlFor=\"Employee ID\">Employee ID</label>\n          <input \n            required\n            className='tinput' \n            type='number' \n            step='0.01'\n            name='Employee ID' \n            onChange={(e)=>setEmpid(e.target.value)}/>\n          <label htmlFor=\"Name\">Name</label>\n          <input \n            required\n            className='tinput' \n            type='text' \n            name='Name' \n            value={name}\n            onChange={(e)=>setName(e.target.value)}/>\n          <label htmlFor=\"Email\">Email</label>\n          <input \n            required\n            className='tinput' \n            type='email' \n            name='Email' \n            value={email}\n            onChange={(e)=>setEmail(e.target.value)}/>\n          <label htmlFor=\"Password\">Password</label>\n          <input \n            required \n            className='tinput'\n            type='password' \n            name='Password' \n            value={password}\n            onChange={(e)=>setPassword(e.target.value)}/>\n          <input type='submit' value='Register' className='submit' style={{fontSize:'18px'}}/>\n        </form>\n        {\n          error ? <p style={{color:\"red\",fontSize:'18px'}}> {error} </p> : ''\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default Register;","import React,{useState} from 'react'\nimport {isLogin,logout} from '../../utils/index'\nimport {useHistory} from 'react-router-dom'\nimport axios from 'axios'\n\nimport '../../css/Button.css'\n\nconst Logout = () => {\n  const [isLoggedin,setIsLoggedin] = useState(isLogin());\n  let history = useHistory();\n\n  const handleSubmit = () => {\n    var options = {\n      headers: { \n        'Authorization': `TOKEN ${localStorage.getItem('token')}` \n      }\n    };\n\n    const url = 'https://credify.tk/logout'\n    axios.post(url,null,options)\n      .then(function (response) {\n        setIsLoggedin(false);\n        logout();\n        history.push(\"/login\"); \n      })\n      .catch(function (error) {\n        console.log(error.response.status);\n        if(error.response.status===401){\n          alert('Ooops!!! Your session has expired')\n          logout();\n          history.push('/login')\n        }\n      });  \n  }\n  return (\n    <input type='button' onClick={handleSubmit} className='submit' value='Logout'\n    style={{margin:'0px',position:'absolute',top:'25px',right:'40px',fontSize:'18px'}} />\n  );\n}\n\nexport default Logout;","export default __webpack_public_path__ + \"static/media/upload.6b6440c5.png\";","export default __webpack_public_path__ + \"static/media/certificates.45d3ed0c.png\";","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport Logout from '../Logout/Logout'\nimport '../../css/Button.css'\nimport './dashboard.css'\nimport uploadImg from '../../img/upload.png'\nimport profileImg from '../../img/certificates.png'\nconst Home = () => {\n  return (\n    <div className=\"dcontainer\">\n      <h1 id='dashboard-title'>Dashboard</h1>\n      <div className=\"linkbtn\">\n        <div className='card card-3'>\n          <Link to=\"/upload\" style={{textDecoration:'none'}}>\n          <img className='btnImg' src={uploadImg} alt=\"upload\"/>\n          <button className='submit s__btn'>Upload Certificate</button>\n          </Link>\n        </div>\n        <div className='card card-3'>\n          <Link to=\"/profile\" style={{textDecoration:'none'}}>\n            <img className='btnImg' src={profileImg} alt=\"profile\"/>\n            <button type=\"button\" className='submit s__btn'>My Certificates</button>\n          </Link>\n        </div>\n        {/* <div className='card card-3'> */}\n          <Link to=\"/quizhome\" style={{textDecoration:'none'}}>\n            {/* <img className='btnImg' src={profileImg} alt=\"profile\"/> */}\n            <button type=\"button\" className='submit s__btn'>Quiz Home</button>\n          </Link>\n        {/* </div> */}\n      </div>\n      <Logout className='logout'/>\n    </div>\n  );\n}\n\n\n\nexport default Home;","import React from 'react'\nimport {Pie} from 'react-chartjs-2'\n\nconst PieChart = (props) => {\n  return (\n    <Pie\n      data={{\n        labels: ['GCP','AWS','Azure'],\n        datasets: [{\n          label:'#CSP ',\n          data: props.cspTotal,\n          backgroundColor: [\n                'rgba(255, 99, 132, 0.2)',\n                'rgba(54, 162, 235, 0.2)',\n                'rgba(255, 206, 86, 0.2)'\n            ],\n            borderColor: [\n                'rgba(255, 99, 132, 1)',\n                'rgba(54, 162, 235, 1)',\n                'rgba(255, 206, 86, 1)',\n            ],\n            borderWidth: 1\n        }]\n      }}\n      width={100}\n      height={40}\n      options={{\n        // responsive: true,\n        // maintainAspectRatio:false,\n        scales:{\n          xAxes: [{\n            gridLines: {display: false},\n            ticks:{display: false}\n          }],\n          yAxes: [{\n            gridLines: {display: false},\n            ticks:{display: false}\n          }]\n        }\n      }}\n    />\n  );\n}\n\nexport default PieChart;","import React from 'react'\nimport {Bar} from 'react-chartjs-2'\n\nconst LevelBarChart = (props) => {\n  // console.log(props);\n  return (\n    <>\n    <h1>Bar chart</h1>\n    <Bar\n      data={{\n        labels:props.levelNames,\n        datasets:[\n          {\n            label:'#Certification level Count',\n            data:props.levelTotal,\n            backgroundColor: [\n                'rgba(255, 99, 132, 0.2)',\n                'rgba(54, 162, 235, 0.2)',\n                'rgba(255, 206, 86, 0.2)'\n            ],\n            borderColor: [\n                'rgba(255, 99, 132, 1)',\n                'rgba(54, 162, 235, 1)',\n                'rgba(255, 206, 86, 1)',\n            ],\n            borderWidth: 1\n          }\n        ]\n      }}\n      width={100}\n      height={50}\n      options={{\n        responsive:true,\n        // maintainAspectRatio:false,\n        scales:{\n          yAxes:[{\n            ticks:{\n              beginAtZero:true,\n              stepSize:1\n            }\n          }]\n        }\n      }}\n    />\n    </>\n  );\n}\n\nexport default LevelBarChart;","import React from 'react'\nimport {Bar} from 'react-chartjs-2'\n\nconst LevelBarChart = (props) => {\n  console.log(props);\n  return (\n    <>\n    <h1>Bar chart</h1>\n    <Bar\n      data={{\n        labels:props.certNames,\n        datasets:[\n          {\n            label:'#Certification level Count',\n            data:props.certNamesTotal,\n            backgroundColor: [\n                'rgba(255, 99, 132, 0.2)',\n                'rgba(54, 162, 235, 0.2)',\n                'rgba(255, 206, 86, 0.2)',\n                'rgba(75, 192, 192, 0.2)',\n                'rgba(153, 102, 255, 0.2)',\n                'rgba(255, 159, 64, 0.2)',\n                'rgba(255, 99, 132, 0.2)',\n                'rgba(54, 162, 235, 0.2)',\n                'rgba(255, 206, 86, 0.2)',\n                'rgba(75, 192, 192, 0.2)',\n                'rgba(153, 102, 255, 0.2)',\n                'rgba(255, 159, 64, 0.2)'\n            ],\n            borderColor: [\n                'rgba(255, 99, 132, 1)',\n                'rgba(54, 162, 235, 1)',\n                'rgba(255, 206, 86, 1)',\n            ],\n            borderWidth: 1\n          }\n        ]\n      }}\n      width={100}\n      height={50}\n      options={{\n        responsive:true,\n        // maintainAspectRatio:false,\n        scales:{\n          yAxes:[{\n            ticks:{\n              beginAtZero:true,\n              stepSize:1\n            }\n          }]\n        }\n      }}\n    />\n    </>\n  );\n}\n\nexport default LevelBarChart;","import axios from 'axios'\n\nconst gcpLevelNames = ['Associate','Professional'];\nconst awsLevelNames = ['Foundational','Associate','Professional','Specialty'];\nconst azureLevelNames = ['Fundamenatals','Professional','Expert'];\nconst awsCertNames = [\n  'Certified Cloud Practitioner',\n  'Certified Developer',\n  'Certified Solutions Architect',\n  'Certified Sysops Administrator',\n  'Certified Devops Engineer',\n  'Certified Solutions Architect',\n  'Certified Advanced Networking',\n  'Certified Alexa Skill Builder',\n  'Certified Data Analytics',\n  'Certified Database',\n  'Certified Machine Learning',\n  'Certified Security'\n];\nconst azureCertNames = [\n  'Certified Azure',\n  'Azure AI',\n  'Azure Data',\n  'Azure Administrator',\n  'Azure AI Engineer',\n  'Azure Database Administrator',\n  'Azure Dataengineer',\n  'Azure Data Scientist',\n  'Azure Developer',\n  'Azure Security engineer',\n  'Azure Devops Engineer',\n  'Solutions Architect'\n];\n\nconst gcpCertNames = [\n'Associate Cloud Engineer',\n'Professional Cloud Architect',\n'Professional Cloud Developer',\n'Professional Cloud Devops Engineer',\n'Professional Cloud Network Engineer',\n'Professional Cloud Security Engineer',\n'Professional Collaboration Engineer'\n];\n \n\nexport const getStats = (\n  SBU,\n  setUsersList,\n  setUsersTotal,\n  setCertsTotal,\n  setCspTotal,\n  setGcpLevelTotal,\n  setAwsLevelTotal,\n  setAzureLevelTotal,\n  setAWSCertNamesTotal,\n  setGCPCertNamesTotal,\n  setAzureCertNamesTotal) => {\n  const url = \"https://credify.tk/adminhome\"; \n  var options = {\n    headers: { \n      'Authorization': `TOKEN ${localStorage.getItem('token')}` \n    }\n  };\n  const body = SBU ? SBU : null;\n  axios.post(url,{\"sbu\":body},options)\n  .then(response => {\n    console.log(response.data);\n    const {GCP,AWS,Azure} = response.data;\n    const cspCount = [GCP.GCP_count,AWS.AWS_count,Azure.Azure_count];\n    const awsLevelCount = [\n      AWS.AWS_foundational.AWS_foundational_count,\n      AWS.AWS_associate.AWS_associate_count,\n      AWS.AWS_professional.AWS_professional_count,\n      AWS.AWS_specialty.AWS_speciality_count\n    ]\n    const gcpLevelCount = [\n      GCP.GCP_assocaite.GCP_associate_count,\n      GCP.GCP_professional.GCP_professional_count,\n    ]\n    const azureLevelCount = [\n      Azure.Azure_fundamentals.Azure_fundamentals_count,\n      Azure.Azure_professional.Azure_professional_count,\n      Azure.Azure_expert.Azure_expert_count,\n    ];\n    const awsCerts=[\n      AWS.AWS_foundational.AWS_foundational_certs.AWS_AWScertifiedcloudpractitioner,\n      AWS.AWS_associate.AWS_associate_certs.AWS_AWScertifieddeveloper,\n      AWS.AWS_associate.AWS_associate_certs.AWS_AWScertifiedsolutionsarchitect,\n      AWS.AWS_associate.AWS_associate_certs.AWS_AWScertifiedsysopsadministrator,\n      AWS.AWS_professional.AWS_professional_certs.AWS_AWScertifieddevopsengineer,\n      AWS.AWS_professional.AWS_professional_certs.AWS_AWScertifiedsolutionsarchitect,\n      AWS.AWS_specialty.AWS_speciality_certs.AWS_AWScertifiedadvancednetworking,\n      AWS.AWS_specialty.AWS_speciality_certs.AWS_AWScertifiedalexaskillbuilder,\n      AWS.AWS_specialty.AWS_speciality_certs.AWS_AWScertifieddataanalytics,\n      AWS.AWS_specialty.AWS_speciality_certs.AWS_AWScertifieddatabase,\n      AWS.AWS_specialty.AWS_speciality_certs.AWS_AWScertifiedmachinelearning,\n      AWS.AWS_specialty.AWS_speciality_certs.AWS_AWScertifiedsecurity,\n    ];\n    const gcpCerts=[\n      GCP.GCP_assocaite.GCP_associate_certs.GCP_associatecloudengineer,\n      GCP.GCP_professional.GCP_professional_certs.GCP_professionalcloudarchitect,\n      GCP.GCP_professional.GCP_professional_certs.GCP_professionalclouddeveloper,\n      GCP.GCP_professional.GCP_professional_certs.GCP_professionalclouddevopsengineer,\n      GCP.GCP_professional.GCP_professional_certs.GCP_professionalcloudnetworkengineer,\n      GCP.GCP_professional.GCP_professional_certs.GCP_professionalcloudsecurityengineer,\n      GCP.GCP_professional.GCP_professional_certs.GCP_professionalcollaborationengineer,\n    ];\n    const azureCerts = [\n      Azure.Azure_fundamentals.Azure_foundational_certs[\"Azure_certified:azure\"],\n      Azure.Azure_fundamentals.Azure_foundational_certs[\"Azure_microsoftcertified:azureai\"],\n      Azure.Azure_fundamentals.Azure_foundational_certs[\"Azure_microsoftcertified:azuredata\"],\n      Azure.Azure_professional.Azure_professional_certs.Azure_microsoftcertifiedazureadministrator,\n      Azure.Azure_professional.Azure_professional_certs.Azure_microsoftcertifiedazureaiengineer,\n      Azure.Azure_professional.Azure_professional_certs.Azure_microsoftcertifiedazuredatabaseadministrator,\n      Azure.Azure_professional.Azure_professional_certs.Azure_microsoftcertifiedazuredataengineer,\n      Azure.Azure_professional.Azure_professional_certs.Azure_microsoftcertifiedazuredatascientist,\n      Azure.Azure_professional.Azure_professional_certs.Azure_microsoftcertifiedazuredeveloper,\n      Azure.Azure_professional.Azure_professional_certs.Azure_microsoftcertifiedazuresecurityengineer,\n      Azure.Azure_expert.Azure_expert_certs.Azure_microsoftcertifiedcertifiedazuredevopsengineer,\n      Azure.Azure_expert.Azure_expert_certs.Azure_microsoftcertifiedsolutionsarchitect\n    ];\n    setUsersList(response.data.users_count);\n    setUsersTotal(response.data.users_count.length);\n    setCertsTotal(response.data.certificates_count);\n    setCspTotal(cspCount);\n    setGcpLevelTotal(gcpLevelCount);\n    setAwsLevelTotal(awsLevelCount);\n    setAzureLevelTotal(azureLevelCount);\n    setAWSCertNamesTotal(awsCerts);\n    setGCPCertNamesTotal(gcpCerts);\n    setAzureCertNamesTotal(azureCerts);\n  })\n  .catch(error =>{\n    console.log(error);\n  })\n}\n\nexport {\n  gcpLevelNames,\n  awsLevelNames,\n  azureLevelNames,\n  gcpCertNames,\n  awsCertNames,\n  azureCertNames,\n}\n\nexport const getAllUsers = (setAllUsers) => {\n  const url = \"https://credify.tk/adminhome\"; \n  var options = {\n    headers: { \n      'Authorization': `TOKEN ${localStorage.getItem('token')}` \n    }\n  };\n  // const [response] = await Promise.all([\n  //   axios.get(`https://maps.googleapis.com/maps/api/geocode/json?&address=${this.props.p1}`),\n  // ]);\n\n  axios.post(url,null,options)\n  .then(response => {\n    return axios.post('https://credify.tk/allusers',{userids:response.data.users_count},options)\n      .then(response => {\n        console.log(response);\n        setAllUsers(response.data);\n      })\n      .catch(function (error) {\n        console.log(error.response.status,error.response);\n      });\n    \n  })\n  .catch(error => {\n    console.log(error);\n  })\n}","import React,{useState,useEffect} from 'react'\nimport PieChart from './PieChart'\nimport LevelBarChart from \"./LevelBarChart\";\nimport NameBarChart from './NameBarChart'\nimport { \n  getStats,\n  gcpLevelNames,\n  awsLevelNames,\n  azureLevelNames,\n  gcpCertNames, \n  awsCertNames, \n  azureCertNames \n} from '../../utils/stats';\nimport './AdminDashboard.css'\nimport {useHistory} from 'react-router-dom'\n\nconst AdminDashboard = () => {\n  const [usersList,setUsersList] = useState([])\n  const [usersTotal,setUsersTotal] =useState('');\n  const [certsTotal,setCertsTotal] =useState('');\n  const [cspTotal,setCspTotal] = useState([]);\n  const [CSP,setCSP] = useState('');\n  const [SBU,setSBU] = useState('')\n  const [gcpLevelTotal,setGcpLevelTotal] = useState([]);\n  const [awsLevelTotal,setAwsLevelTotal] = useState([]);\n  const [azureLevelTotal,setAzureLevelTotal] = useState([]);\n  const [GCPCertNamesTotal,setGCPCertNamesTotal] = useState([]);  \n  const [AWSCertNamesTotal,setAWSCertNamesTotal] = useState([]);\n  const [AzureCertNamesTotal,setAzureCertNamesTotal] = useState([]);\n  \n  const history = useHistory();\n\n  \n  useEffect(()=>{\n    getStats(\n      SBU,\n      setUsersList,\n      setUsersTotal,\n      setCertsTotal,\n      setCspTotal,\n      setGcpLevelTotal,\n      setAwsLevelTotal,\n      setAzureLevelTotal,\n      setGCPCertNamesTotal,\n      setAWSCertNamesTotal,\n      setAzureCertNamesTotal\n    );\n  },[SBU]);\n\n  const onChangeCsp = (e) => {\n    setCSP(e.target.value);\n  }\n\n  const handleTotalCertsClick = () => {\n    history.push({\n      pathname: '/adminallcerts',\n      state: { sbu: SBU }\n    })\n  } \n\n  const handleTotalUsersClick = () => {\n    history.push({\n      pathname: '/users',\n      state: { usersList }\n    })\n  }\n\n\n  return (\n    <>\n    {/* <h1 style={{fontSize:'1.5em',marginTop:'10px',marginLeft:'20px'}}>Admin Dashboard</h1> */}\n    <div className=\"top-section\">\n    <div className='inputCsp card' onChange={onChangeCsp}>\n      <input type=\"radio\" value=\"GCP\" name=\"csp\" id='gcp'/>\n      <label htmlFor=\"gcp\">GCP</label>\n      <input type=\"radio\" value=\"AWS\" name=\"csp\" id='aws' />\n      <label htmlFor=\"aws\">AWS</label>\n      <input type=\"radio\" value=\"Azure\" name=\"csp\" id='azure' />\n      <label htmlFor=\"azure\">Azure</label>\n      <select onChange={(e)=>setSBU(e.target.value)}\n              name=\"SBU\" required className=\"sbu-select\">\n        <option className='disabled' defaultValue value=''>  SBU  </option>\n        <option value='SBU 1'>SBU 1</option>\n        <option value='SBU 2'>SBU 2</option>\n        <option value='SBU 3'>SBU 3</option>\n      </select>\n    </div>\n      <div className=\"card dash-card\">\n        <PieChart cspTotal={cspTotal} SBU={SBU} style={{display:'block'}} />\n      </div>\n      <div className='total-section'>\n        <div className=\"card total-card\" onClick={handleTotalUsersClick}>Total Number of Users <br/> {usersTotal}</div>\n        <div className=\"card total-card\" onClick={handleTotalCertsClick}>Total Number of Certificates <br/>  {certsTotal}</div>\n      </div>\n    </div>\n    <div className='bottom-section'>\n      {\n        CSP==='GCP' \n        ? (<div className=\"card dash-card\">\n            <LevelBarChart SBU={SBU} levelTotal={gcpLevelTotal} levelNames={gcpLevelNames} />\n            </div>)\n        : CSP==='AWS'\n        ? (<div className=\"card dash-card\">\n          <LevelBarChart SBU={SBU} levelTotal={awsLevelTotal} levelNames={awsLevelNames} />\n          </div>)\n        : CSP==='Azure'\n        ? (<div className=\"card dash-card\">\n          <LevelBarChart SBU={SBU} levelTotal={azureLevelTotal} levelNames={azureLevelNames} />\n          </div>)\n        :''\n      }\n      {  \n        CSP==='GCP' \n        ? (<div className=\"card dash-card\"><NameBarChart SBU={SBU} certNamesTotal={GCPCertNamesTotal} certNames={gcpCertNames} /></div>)\n        : CSP==='AWS'\n        ? (<div className=\"card dash-card\"><NameBarChart SBU={SBU} certNamesTotal={AWSCertNamesTotal} certNames={awsCertNames} /></div>)\n        : CSP==='Azure'\n        ? (<div className=\"card dash-card\"><NameBarChart SBU={SBU} certNamesTotal={AzureCertNamesTotal} certNames={azureCertNames} /></div>)\n        :''\n      }\n    </div>\n    </>\n  );\n}\n\nexport default AdminDashboard;","import React,{useState} from 'react';\nimport axios from 'axios'\nimport {isLogin,logout} from '../../utils/index'\nimport {useHistory} from 'react-router-dom'\nimport {Navbar,Nav,NavDropdown} from 'react-bootstrap';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nconst AdminNavbar = () => {\n  const [isLoggedin,setIsLoggedin] = useState(isLogin());\n  let history = useHistory();\n\n  const handleLogout = () => {\n    var options = {\n      headers: { \n        'Authorization': `TOKEN ${localStorage.getItem('token')}` \n      }\n    };\n\n    const url = 'https://credify.tk/logout'\n    axios.post(url,null,options)\n      .then(function (response) {\n        setIsLoggedin(false);\n        logout();\n        history.push(\"/login\"); \n      })\n      .catch(function (error) {\n        console.log(error.response.status);\n        if(error.response.status===401){\n          alert('Ooops!!! Your session has expired')\n          logout();\n          history.push('/login')\n        }\n      });  \n  }\n  return (\n    <div className='nav-container'>\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n      <Navbar.Brand href=\"/admindash\">Credify-Admin</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"resp-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"/admindash\">Dashboard</Nav.Link>\n          <Nav.Link href=\"/users\">Users</Nav.Link>\n          <NavDropdown title=\"Certificates\" id=\"basic-nav-dropdown\">\n            <NavDropdown.Item href=\"/adminallcerts\">All Certificates</NavDropdown.Item>\n            <NavDropdown.Divider />\n            <NavDropdown.Item href=\"/adminexpiring\">Expiring Certificates</NavDropdown.Item>\n            <NavDropdown.Divider />\n            <NavDropdown.Item href=\"/adminexpired\">Expired Certificates</NavDropdown.Item>\n          </NavDropdown>\n          <NavDropdown title=\"Quiz\" id=\"basic-nav-dropdown\">\n            <NavDropdown.Item href=\"/adminsetquiz\">Create New Quiz</NavDropdown.Item>\n            <NavDropdown.Divider />\n          </NavDropdown>\n        </Nav>\n        <Nav>\n          <Nav.Link onClick={handleLogout}>Logout</Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default AdminNavbar;","import React from 'react'\nimport {isAdmin, isLogin} from '../../utils/index'\nimport Login from '../Login/Login';\nimport Dashboard from '../Dashboard/Dashboard';\nimport AdminDashboard from '../AdminDashboard/AdminDashboard';\nimport AdminNavbar from '../AdminNavbar';\n\n\n\nconst Home = () => {\n  if(isAdmin() && isLogin())\n    return (\n    <>\n    <AdminNavbar/>\n    <AdminDashboard />\n    </>\n    )\n  else if(isLogin() && isAdmin()===false)\n    return <Dashboard/>;\n  else \n    return <Login/>;\n}\n\nexport default Home;\n","import React,{useState} from 'react'\nimport '../css/cselect.css'\n\n\nconst CustomSelect = (props) => {\n\n  const [cspselected, setCSPSelected] = useState(\"\");\n  const [levelselected,setLevelSelected] = useState(\"\");\n  \n  const handleCSPSelect = ({target}) => {\n    setCSPSelected(target.value);\n  }\n  const handleLevelSelect = ({target}) => {\n    setLevelSelected(target.value);\n  }\n  \n  const handleCertDetails = ({target}) => {\n    props.setCert(cspselected,levelselected,target.value);\n  }\n\n  // GCP\n  const GCP = {\n    Associate : [\"Associate Cloud Engineer\"],\n    Professional : [\n      \"Professional Cloud Architect\", \n      \"Professional Cloud Developer\", \n      \"Professional Data Engineer\",\n      \"Professional Cloud DevOps Engineer\",\n      \"Professional Cloud Security Engineer\",\n      \"Professional Cloud Network Engineer\",\n      \"Professional Collaboration Engineer\",\n      \"Professional Machine Learning Engineer\"\n    ]\n  }\n  \n  // AWS\n  const AWS = {\n    Foundational : [\"AWS Certified Cloud Practitioner\"],\n    Associate : [ \n      \"AWS Certified Developer\",\n      \"AWS Certified SysOps Administrator\",\n      \"AWS Certified Solutions Architect\"\n    ],\n    Professional : [\n      \"AWS Certified DevOps Engineer\",\n      \"AWS Certified Solutions Architect\"\n    ],\n    Specialty : [\n      \"AWS Certified Advanced Networking\",\n      \"AWS Certified Security\",\n      \"AWS Certified Machine Learning\",\n      \"AWS Certified Database\",\n      \"AWS Certified Data Analytics\",\n      \"AWS Certified Alexa Skill Builder\"\n    ]\n  }\n\n\n  const Azure = {\n    Fundamentals : [ \n      \"Certified: Azure\",\n      \"Microsoft Certified: Azure AI\", \n      \"Microsoft Certified: Azure Data\"\n    ],\n    Professional : [\n      \"Microsoft Certified Azure Administrator\", \n      \"Microsoft Certified: Azure Developer\", \n      \"Microsoft Certified: Azure Security Engineer\", \n      \"Microsoft Certified: Azure AI Engineer\", \n      \"Microsoft Certified: Azure Data Scientist\", \n      \"Microsoft Certified: Azure Data Engineer\", \n      \"Microsoft Certified: Azure Database Administrator\" \n    ],\n    Expert : [\n      \"Microsoft Certified Solutions Architect\", \n      \"Microsoft Certified: Azure DevOps Engineer\"  \n    ]\n  }\n  let csp = null;\n  let level = null;\n\n  let certnames = null; \n  let certlevels = null; \n\n  if (cspselected === \"GCP\") { \n    csp = GCP; \n  } else if (cspselected === \"AWS\") { \n    csp = AWS; \n  } else if (cspselected === \"Azure\") { \n    csp = Azure; \n  } \n  \n  if(csp){\n    certlevels= Object.keys(csp).map((el) => <option key={el}>{el}</option>);\n  }\n  \n  if(cspselected===\"GCP\" && levelselected==='Associate'){\n    level=GCP.Associate;\n  }\n  else if(cspselected===\"GCP\" && levelselected==='Professional'){\n    level=GCP.Professional;\n  }\n  else if(cspselected===\"AWS\" && levelselected==='Foundational'){\n    level=AWS.Foundational;\n  }\n  else if(cspselected===\"AWS\" && levelselected==='Associate'){\n    level=AWS.Associate;\n  }\n  else if(cspselected===\"AWS\" && levelselected==='Professional'){\n    level=AWS.Professional;\n  }\n  else if(cspselected===\"AWS\" && levelselected==='Specialty'){\n    level=AWS.Specialty;\n  }\n  else if(cspselected===\"Azure\" && levelselected==='Fundamentals'){\n    level=Azure.Fundamentals;\n  }\n  else if(cspselected===\"Azure\" && levelselected==='Professional'){\n    level=Azure.Professional;\n  }\n  else if(cspselected===\"Azure\" && levelselected==='Expert'){\n    level=Azure.Expert;\n  }\n\n  // console.log(level);\n\n  if (level) { \n    certnames = level.map((el) => <option key={el}>{el}</option>); \n  } \n\n  return (\n    <div>\n        <div className=\"cselect\">  \n          <label htmlFor=\"Cloud Service Provider\">Cloud Service Provider</label>\n          <select onChange={handleCSPSelect} name=\"Cloud Service Provider\" required> \n            <option className='disabled' defaultValue value>  select an option  </option>\n            <option>GCP</option> \n            <option>AWS</option> \n            <option>Azure</option> \n          </select> \n        </div> \n        <div className=\"cselect\"> \n          <label htmlFor=\"Cloud Certification Level\">Cloud Certification Level</label>\n          <select onChange={handleLevelSelect} required> \n          <option className='disabled' defaultValue value>  select an option  </option>\n            { \n              certlevels \n            } \n          </select> \n        </div> \n        <div className=\"cselect\"> \n          <label htmlFor=\"Cloud Certification Name\">Cloud Certification Name</label>\n          <select onChange={handleCertDetails} required> \n          <option className='disabled' defaultValue value>  select an option  </option>\n            { \n              certnames \n            } \n          </select> \n        </div> \n    </div> \n  );\n}\n\nexport default CustomSelect;","import React,{useState,useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios'\n\nimport '../../css/Button.css'\nimport '../../css/cselect.css'\nimport './upload.css'\n\n\n// import Toggle from '../utils/Toggle';\nimport CustomSelect from '../../utils/CustomSelect';\n\nconst Upload = () => {\n  const [userCertDetails,setuserCertDetails] = useState(\n    {\n      csp: '',\n      certlevel: '',\n      certname: '',\n      sbu: '',\n      certid: '',\n      dateofcert: '',\n      expiry: '',\n      certFile: null\n    });\n    const [error,setError] = useState('');\n\n  let history = useHistory();\n\n  \n  const handleCustomSelect = (csp,certlevel,certname) => {\n    setuserCertDetails({...userCertDetails,csp,certlevel,certname});\n  }\n\n  const handleSubmit = (e) =>{\n    \n    e.preventDefault();\n    // const usercred = {name, email, password};\n    console.log('upload Button clicked',userCertDetails);\n    \n    const formData = new FormData();\n    formData.append(\"pdf\", userCertDetails.certFile);\n    formData.append(\"csp\", userCertDetails.csp);\n    formData.append(\"level\", userCertDetails.certlevel);\n    formData.append(\"certname\", userCertDetails.certname);\n    formData.append(\"sbu\", userCertDetails.sbu);\n    formData.append(\"certid\", userCertDetails.certid);\n    formData.append(\"certified_date\", userCertDetails.dateofcert);\n    formData.append(\"expiry_date\", userCertDetails.expiry);\n    \n\n\n    const url = \"https://credify.tk/certificates\"; \n    var options = {\n      headers: { \n        'Authorization': `TOKEN ${localStorage.getItem('token')}` \n      }\n    };\n\n    axios.post(url,formData,options)\n      .then(function (response) {\n        console.log(response);\n         alert(\"Your Certificate has been uploaded!\");\n         document.getElementById(\"uploadform\").reset();\n         history.push('/dashboard')\n      })\n      .catch(function (error) {\n        console.log(error.response);\n        Object.entries(error.response.data).forEach(([key,value]) => {\n          setError(`${key.charAt(0).toUpperCase() + key.slice(1)} : ${value[0]}`);\n        })\n      });\n  }\n  \n  return (\n    <div className=\"container\">\n      <h2 id='header' style={{marginBottom:'30px'}}>Upload Certificates</h2>\n      <form id='uploadform' onSubmit={handleSubmit}>\n        <CustomSelect setCert={handleCustomSelect}/>\n        <label htmlFor='Certification ID'>Certification ID</label>\n        <input\n          required\n          className='tinput' \n          type='text' \n          name='Certification ID' \n          value={userCertDetails.certid}\n          onChange={(e)=>setuserCertDetails({...userCertDetails,certid:e.target.value})}/>\n        <label htmlFor='SBU'>Select a SBU</label>\n        <br/>\n        <select onChange={(e)=>setuserCertDetails({...userCertDetails,sbu:e.target.value})} \n                name=\"SBU\" required>\n          <option className='disabled' defaultValue value>  select an option  </option>\n          <option value='SBU 1'>SBU 1</option>\n          <option value='SBU 2'>SBU 2</option>\n          <option value='SBU 3'>SBU 3</option>\n        </select>\n        <br/>\n        <label htmlFor=\"Date of Certification\">Date of Certification</label>\n        <input \n          required\n          type='date' \n          name='Date of Certification' \n          value={userCertDetails.dateofcert}\n          placeholder='Date of Certification' \n          onChange={(e)=>setuserCertDetails({...userCertDetails,dateofcert:e.target.value})}/>\n        <label htmlFor=\"Expiry Date of Certification\">Expiry Date</label>\n        <input \n          required\n          type='date' \n          name='Expiry Date of Certification' \n          value={userCertDetails.expiry}\n          placeholder='Expiry Date of Certification' \n          onChange={(e)=>setuserCertDetails({...userCertDetails,expiry:e.target.value})}/>\n        <label htmlFor=\"file\">Certificate pdf</label>\n        <input type=\"file\" name=\"file\" onChange={(e)=>{setuserCertDetails({...userCertDetails,certFile:e.target.files[0]})}}/>\n        {/* <Toggle name=\"Private\" setVisibility={handleToggle} /> */}\n        <input type='submit' value='Upload' className='submit upload'/>\n        <div className=\"cancel\">\n          <Link to=\"/dashboard\">\n            <button type=\"button\" className='cancelbtn'>Cancel</button>\n          </Link>\n        </div>\n\n      </form>\n      {\n        error ? <p style={{color:\"red\"}}> {error} </p> : ''\n      }\n    </div>\n\n  );\n}\n\nexport default Upload;","import react from 'react';\nimport {useHistory} from 'react-router-dom'\nimport '../Profile/profile.css'\n\nimport '../../css/card.css'\nimport { isAdmin } from '../../utils';\nimport { useLocation } from 'react-router-dom'\n\n\nconst Certificate= (props) => {\n  const loc = useLocation().pathname;\n  console.log('Certifcates.js props:',props);\n  const difDate = (d2) => {\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, '0');\n    var mm = String(today.getMonth() + 1).padStart(2, '0');\n    var yyyy = today.getFullYear();\n    const date1 =new Date(`${yyyy}/${mm}/${dd}`);\n    const date2 = new Date(d2);\n    const diffTime = date2 - date1;\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24)); \n    return diffDays;\n  }\n  const {certs} = props;\n  console.log(certs);\n  if(certs.length>0){\n    return(\n        certs.map((cert,i)=>{\n          return(\n              <div key={i} className=\"c-card\">\n                <div className=\"card-img\" >\n                  { cert.csp==='GCP' ?\n                  <img src=\"https://www.credify.tk/static/media/GCP.1985723b.png\" alt=\"Google Cloud Platform\" />\n                    : cert.csp==='AWS' ?\n                  <img src=\"https://www.credify.tk/static/media/AWS.6409eb93.png\" alt=\"Amazon Web Services\" />\n                    :\n                  <img src=\"https://www.credify.tk/static/media/Azure.81bf95e5.png\" alt=\"Microsoft Azure\" />\n                  }\n                </div>\n                <div className=\"card-body\">\n                  <div className=\"card-title\">{cert.certname}</div>\n                  {isAdmin() && \n                  <>\n                  <div className=\"card-intro\">Email: {cert.user.email}</div>\n                  <div className=\"card-intro\">Employee ID: {cert.user.empid}</div>\n                  </>\n                  }\n                  <div className=\"card-intro\">{cert.csp}</div>\n                  <div className=\"card-intro\">Certification ID : {cert.certid}</div>\n                  <div className=\"card-intro\">Expiry Date : {cert.expiry_date}</div>\n                  { difDate(cert.expiry_date) ?\n                    <div className=\"card-intro\">Ends in : {difDate(cert.expiry_date)} days</div>\n                    :\n                    <div className=\"card-intro\" style={{color:'red'}}>Expired</div>\n\n                  }\n                </div>\n                <div className='card-btn'>\n                  <a target=\"_blank\" style={{textDecoration:'none',fontSize:'18px'}} href={cert.pdf_url} className='submit'>View</a>  \n                {props.notifySingle ? <a onClick={()=>props.notifySingle(i)} style={{marginLeft:'110px',textDecoration:'none',fontSize:'18px'}} className=\"submit\">Notify</a> : ''}\n                {(isAdmin() && loc.slice(0,-2)===\"/usercerts\") || props.deleteCertificate ? <a onClick={()=>props.deleteCertificate(cert.id)} style={{cursor:'pointer',marginLeft:'110px',textDecoration:'none',fontSize:'18px'}} className=\"submit\">Delete</a> : ''}\n                </div>\n              </div>\n          )\n        })\n    \n    );\n\n  }\n  else{\n    return (\n    <>\n    <div className=\"c-card\">\n      <div className=\"card-img skeleton\"></div>\n      <div className=\"card-body\">\n        <div className=\"card-title skeleton\"></div>\n        <div className=\"card-intro skeleton\"></div>\n        <div className='card-sbtn skeleton'></div>\n      </div>\n    </div>\n    <div className=\"c-card\">\n      <div className=\"card-img skeleton\"></div>\n      <div className=\"card-body\">\n        <div className=\"card-title skeleton\"></div>\n        <div className=\"card-intro skeleton\"></div>\n        <div className='card-sbtn skeleton'></div>\n      </div>\n    </div>\n    <div className=\"c-card\">\n      <div className=\"card-img skeleton\"></div>\n      <div className=\"card-body\">\n        <div className=\"card-title skeleton\"></div>\n        <div className=\"card-intro skeleton\"></div>\n        <div className='card-sbtn skeleton'></div>\n      </div>\n    </div>\n    <div className=\"c-card\">\n      <div className=\"card-img skeleton\"></div>\n      <div className=\"card-body\">\n        <div className=\"card-title skeleton\"></div>\n        <div className=\"card-intro skeleton\"></div>\n        <div className='card-sbtn skeleton'></div>\n      </div>\n    </div>\n    \n    </>\n    )\n  }\n\n}\n\nexport default Certificate;","import React,{useEffect, useState} from \"react\";\nimport Certificate from '../Certificate/Certificate'\nimport axios from \"axios\";\n\nimport './profile.css'\n\nconst Profile = () => {\n  const [certs,getCerts] = useState('');\n  const [username,setUsername] = useState('');\n  const [email,setEmail] = useState('');\n  var cert;\n  useEffect(()=>{\n    getAllCerts();\n    // const Userurl = 'https://credify.tk/user';\n    // const options = {\n    //   headers: { \n    //     'Authorization': `TOKEN ${localStorage.getItem('token')}` \n    //   }\n    // };\n    // axios.get(Userurl,options)\n    //   .then(function (response) {\n    //     console.log('response:',response.data);\n    //     const user =response.data;\n      \n    //     setUsername(response.data.name);\n    //     setEmail(response.data.email);\n    //     console.log(email,username);\n\n        \n    //   })\n    //   .catch(function (error) {\n    //     console.log(error.response.status,error.response.data);\n    //   });\n    \n  },[])\n\n  const getAllCerts = () =>{\n    const Certurl = 'https://credify.tk/certificates';\n    const options = {\n      headers: { \n        'Authorization': `TOKEN ${localStorage.getItem('token')}` \n      }\n    };\n    axios.get(Certurl,options)\n      .then(function (response) {\n        const allCerts = response.data;\n        getCerts(allCerts);\n\n      })\n      .catch(function (error) {\n        console.log(error.response.status,error.response.data);\n        // Object.entries(error.response.data).forEach(([key,value]) => {\n        //   setError(`${key.charAt(0).toUpperCase() + key.slice(1)} : ${value[0]}`);\n        // })\n\n      });\n  }\n\n\n\n  const difDate = (d1,d2) => {\n    const date1 = new Date(d1);\n    const date2 = new Date(d2);\n    console.log(date1,date2);\n    const diffTime = Math.abs(date2 - date1);\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24)); \n    return diffDays;\n  }\n  return (\n    <div>\n    <h1 style={{marginLeft:'45px',fontSize:'35px',marginTop:'45px'}}>My Certificates</h1>\n    <div className=\"certcontainer\">\n      <Certificate certs={certs}/>\n    </div>  \n    </div>\n  );\n}\n\nexport default Profile;","export default __webpack_public_path__ + \"static/media/user.6841be83.jpg\";","import axios from 'axios'\n\nexport const deleteCertificate = (certid) => {\n  const url = 'https://credify.tk/sendmail';\n  axios.delete(url,{headers:{'Authorization': `TOKEN ${localStorage.getItem('token')}`},data:{certid}})\n  .then(response => {\n    console.log(response.data);\n    window.location.reload();\n  })\n  .catch(function (error) {\n    console.log(error.response.status,error.response);\n  });\n}\n\n\nexport const deleteUser = (userid) => {\n  const url = 'https://credify.tk/sendmail';\n  axios.delete(url,{headers:{'Authorization': `TOKEN ${localStorage.getItem('token')}`},data:{userid}})\n  .then(response => {\n    console.log(response.data);\n    window.location.reload();\n  })\n  .catch(function (error) {\n    console.log(error.response.status,error.response);\n  });\n}","import React,{useState,useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport axios from 'axios'\nimport {useHistory} from 'react-router-dom'\n// import Popup from '../Popup/Popup'\n\nimport './users.css'\nimport userImg from '../../img/user.jpg'\nimport { deleteUser } from '../../utils/delete'\nimport { getAllUsers } from '../../utils/stats'\n\nconst Users = (props) => {\n  let [allUsers,setAllUsers] = useState('');\n  // let [trigger,setTrigger] = useState(false)\n  let [userid,setUserid] = useState('')\n  console.log(props);\n\n  const userids = props.location.state ? props.location.state.usersList : null;\n  let history=useHistory();\n\n  useEffect(()=>{\n    const url='https://credify.tk/allusers'\n    var options = {\n      headers: { \n        'Authorization': `TOKEN ${localStorage.getItem('token')}` \n      }\n    };\n    if(userids){\n      axios.post(url,{userids},options)\n        .then(response => {\n          console.log(response);\n          setAllUsers(response.data);\n        })\n        .catch(function (error) {\n          console.log(error.response.status,error.response);\n        });\n    }\n    else{\n      getAllUsers(setAllUsers);\n    }\n  },[])\n\n  // const handleContactClick = (userid) => {\n  //   // setTrigger(true);\n  //   setUserid(userid);\n  // }\n\n  const handleProfileClick = (userid) => {\n    history.push(`/usercerts/${userid}`)\n  }\n  return(\n    <>\n    <h1>Users</h1>\n    {/* <Popup trigger={trigger} setTrigger={setTrigger} userid={userid} setUserid={setUserid} /> */}\n    <div className=\"ucontainer\">\n    { allUsers.length>0  ?\n      (\n        allUsers.map(user=> \n        <div key={user.id} className=\"ucard\">\n          <div className=\"card__body\">\n            <div className=\"card__img\">\n              <img src={userImg} alt=\"\"/>\n            </div>\n            <span className=\"card__name\">{user.name}</span>\n            <span className=\"card__empid\">{user.empid}</span>\n            <span className=\"card__email\">{user.email}</span>\n            <div className=\"card__footer\">\n              <a onClick={()=>handleProfileClick(user.id)} title=\"\" className=\"card__btn cbtn btn-primary\">Certificates</a>\n              <a onClick={()=>deleteUser(user.id)} className=\"card__btn cbtn contactbtn\">Delete</a>\n            </div>\n          </div>\n        </div>)\n      )\n      : [...Array(4)].map((e, i) =>\n      <div className=\"ucard\" key={i}>\n        <div className=\"card__body\">\n          <div className=\"card__img skeleton\">\n            <img src=\"\" alt=\"\" />\n          </div>\n          <span className=\"card__name skeleton\">Place Holder</span>\n          <span className=\"card__empid skeleton\">1234567</span>\n          <span className=\"card__email skeleton\">placeholder@company.com</span>\n          <div className=\"card__footer skeleton\">\n            <a href=\"#\" title=\"\" className=\"card__btn cbtn btn-primary\">Certificates</a>\n            <a href=\"#\" title=\"\" className=\"card__btn cbtn\">Contact</a>\n          </div>\n        </div>\n      </div>\n      )\n    }\n    </div>\n    </>\n  );\n}\n\nexport default Users;","import React,{useState} from 'react'\nimport Logout from '../Logout/Logout'\nimport {Link} from 'react-router-dom'\nimport Users from '../Users/Users'\nimport {useHistory} from 'react-router-dom'\n\nimport './adminhome.css'\n\n\nconst AdminHome = () => {\n  const [empid,setEmpid] = useState(0);\n  const [showUsers,setShowUsers] = useState(false);\n\n  let history=useHistory();\n\n  const handleSubmit = (e) =>{\n    e.preventDefault();\n    document.getElementById('searchForm').reset();\n    history.push(`/usercerts/${empid}`)\n  }\n  return (\n    <div className='admin-container'>\n      <h1 style={{marginTop:'70px'}}>Admin Dashboard</h1>\n      <form id='searchForm' onSubmit={handleSubmit}>\n        <input\n            required\n            className='tinput search-input' \n            type='text' \n            name='Employee ID' \n            placeholder='Employee Id' \n            onChange={(e)=>setEmpid(e.target.value)}/>\n        <input type='submit' value='Search' className='submit search-btn'/>\n      </form>\n      <Users /> \n      <Link to=\"/admindash\" style={{ textDecoration: 'none' }}>\n        Admin Dashboard\n      </Link>\n      <Logout/>\n    </div>\n  );\n}\n\nexport default AdminHome;","import React,{useState,useEffect} from 'react'\nimport Certificate from '../Certificate/Certificate'\nimport axios from 'axios'\nimport { deleteCertificate } from '../../utils/delete';\n\nconst AdminAllCerts = (props) => {\n  const [certs,getCerts] = useState('');\n  useEffect(()=>{\n    getUserCerts();  \n  },[]);\n\n  const getUserCerts = () =>{\n    const url = 'https://credify.tk/alluserscertificates';\n    var options = {\n      headers: { \n        'Authorization': `TOKEN ${localStorage.getItem('token')}` \n      }\n    };\n    const sbu = props.location.state.sbu ? {sbu:props.location.state.sbu} : null; \n    axios.post(url,sbu,options)\n    .then(response => {\n      console.log(response.data);\n      getCerts(response.data);\n    })\n    .catch(function (error) {\n      console.log(error.response.status,error.response);\n    });\n  }\n  return(\n    <>\n      <h1 style={{fontSize:'1.8em',marginTop:'25px',marginLeft:'50px'}}>All Certificates</h1>\n      <div className=\"certcontainer\">\n        <Certificate certs={certs} deleteCertificate={deleteCertificate}/>\n      </div> \n    </>\n  );\n}\n\nexport default AdminAllCerts;","import axios from 'axios';\nimport React,{useEffect, useState} from 'react'\nimport Certificate from '../Certificate/Certificate'\n// import Popup from '../Popup/Popup'\nimport './UserCertificates.css'\n  \nconst UserCertificates = (props) => {\n  console.log(props);\n  console.log('User certs userid props',props.match.params.userid);\n  const [certs,getCerts] = useState('');\n  const [user_id,setUserid]=useState(props.match.params.userid);\n  // let [trigger,setTrigger] = useState(false);\n  useEffect(()=>{\n    getUserCerts();  \n  },[]);\n\n  const getUserCerts = () =>{\n    const url = 'https://credify.tk/alluserscertificates';\n    var options = {\n      headers: { \n        'Authorization': `TOKEN ${localStorage.getItem('token')}` \n      }\n    };\n    axios.post(url,{user_id},options)\n    .then(response => {\n      console.log(response.data);\n      getCerts(response.data);\n    })\n    .catch(function (error) {\n      console.log(error.response.status,error.response);\n    });\n  }\n  \n  return(\n    <>\n    <h1 className='uc-title'>Users Certificates</h1> \n    {/* <button className=\"submit popup-btn\" onClick={()=>setTrigger(true)}>Send Mail</button> */}\n    <div className=\"certcontainer\">\n      <Certificate certs={certs}/>\n    </div> \n    {/* <Popup trigger={trigger} setTrigger={setTrigger} userid={userid} setUserid={setUserid} /> */}\n    </>\n  );\n}\n\nexport default UserCertificates;","import axios from 'axios';\nimport React,{useState} from 'react'\nimport './SendMail.css'\n\nconst SendMail = (props) => {\n  const empid=props.empid;\n  const [message,setMessage] = useState('');\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const url = 'https://credify.tk/sendmail'\n    var options = {\n      headers: { \n        'Authorization': `TOKEN ${localStorage.getItem('token')}` \n      }\n    };\n    axios.post(url,{empid,msg:message},options)\n      .then(response=>{\n        alert(response.data);\n        document.getElementById('sendForm').reset();\n      })\n      .catch(error=>{\n        console.log(error.response);\n      })\n  }\n\n  return(\n    <>\n    <h1 style={{marginBottom:'30px'}}>Send Mail</h1>\n    <form id='sendMailForm' onSubmit={handleSubmit}>\n      ​<textarea id=\"txtArea\" name='Message'\n      placeholder='Enter your message here'\n        value={message}\n        onChange={(e)=>setMessage(e.target.value)}\n        rows=\"18\" cols=\"40\"></textarea>\n      <input type='submit' value='Send' className='submit send-btn'/>\n    </form>\n    </>\n  );\n}\n\nexport default SendMail;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isLogin,isAdmin } from '../utils';\n\nconst PrivateRoute = ({component: Component, ...rest}) => {\n    return (\n\n        // Show the component only when the user is logged in\n        // Otherwise, redirect the user to /login page\n        <Route {...rest} render={props => (\n            isAdmin()===false && isLogin() ?\n                <Component {...props} />\n            : <Redirect to=\"/\" />\n        )} />\n    );\n};\n\nexport default PrivateRoute;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isLogin,isAdmin } from '../utils';\n\nconst PublicRoute = ({component: Component, restricted, ...rest}) => {\n    return (\n        <Route {...rest} render={props => {\n            if(isAdmin() && restricted){\n                return <Redirect to=\"/admin\" />\n            } \n            else if(isAdmin===false && isLogin() && restricted){\n                return <Redirect to=\"/dashboard\" />\n            }\n            else{\n                return <Component {...props} />\n            }\n\n        }\n        } />\n    );\n};\n\nexport default PublicRoute;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AdminNavbar from '../components/AdminNavbar';\nimport { isAdmin, isLogin } from '../utils/index';\n\n\nconst AdminRoute = ({component: Component, ...rest}) => {\n    return (\n\n        // Show the component only when the user is logged in\n        // Otherwise, redirect the user to /login page\n        <Route {...rest} render={props => (\n            isAdmin()===true && isLogin()===true ?\n                (\n                <>\n                <AdminNavbar/>\n                <Component {...props} />\n                </>\n                )\n            : <Redirect to=\"/\" />\n        )} />\n    );\n};\n\nexport default AdminRoute;","import React,{useState,useEffect} from 'react'\nimport Certificate from '../Certificate/Certificate'\nimport axios from 'axios'\nimport { deleteCertificate } from '../../utils/delete';\n\nconst AdminExpired = () => {\n  const [certs,getCerts] = useState('');\n  const [isLoading,setIsLoading] = useState(true);\n  useEffect(()=>{\n    setTimeout(() => {\n      setIsLoading(false)\n    }, 1000);\n    getUserCerts();  \n  },[]);\n\n  const getUserCerts = () =>{\n    const url = 'https://credify.tk/expired';\n    var options = {\n      headers: { \n        'Authorization': `TOKEN ${localStorage.getItem('token')}` \n      }\n    };\n    axios.get(url,options)\n    .then(response => {\n      console.log(response.data);\n      getCerts(response.data);\n    })\n    .catch(function (error) {\n      console.log(error.response.status,error.response);\n    });\n  }\n\n  \n  return(\n    <>\n      <h1 style={{fontSize:'1.8em',marginTop:'25px',marginLeft:'50px'}}>All Certificates</h1>\n      { !isLoading && certs.length>0 ?\n          <div className=\"certcontainer\">\n            <Certificate certs={certs} deleteCertificate={deleteCertificate}/>\n          </div>\n          :isLoading ? <h5 style={{fontSize:'1.4em',marginTop:'25px',marginLeft:'50px'}}>Loading...Please Wait</h5>\n        :<h5 style={{fontSize:'1.4em',marginTop:'25px',marginLeft:'50px'}}>No Expired Certificates yet</h5>\n      } \n    </>\n  );\n}\n\nexport default AdminExpired;","import React,{useState,useEffect} from 'react'\nimport Certificate from '../Certificate/Certificate'\nimport axios from 'axios'\n\n\n\nconst AdminExpiring = () => {\n  const [certs,getCerts] = useState('');\n  const [expiryThreshold,setExpiryThreshold] = useState(0);\n  const [isClicked,setIsClicked] = useState(false);\n  const [isbtntrigger,setIsBtnTrigger] = useState(false);\n  const [certids,setCertids]= useState([]);\n\n  useEffect(()=>{\n    setIsClicked(false);\n  },[])\n\n  const getUserCerts = () =>{\n    const url = 'https://credify.tk/expiring';\n    var options = {\n      headers: { \n        'Authorization': `TOKEN ${localStorage.getItem('token')}` \n      }\n    };\n    axios.post(url,{\"days\":Number(expiryThreshold)},options)\n    .then(response => {\n      console.log(response.data);\n      getCerts(response.data);\n      const certs =  response.data;\n      setCertids(certs.map(cert=>cert.id));\n    })\n    .catch(function (error) {\n      console.log(error.response.status,error.response);\n    });\n  }\n\n  const handleSubmit = (e) =>{\n    e.preventDefault();\n    getUserCerts();\n    setIsClicked(true);\n  }\n  const notifyAll = () => {\n    const url = 'https://credify.tk/sendmail';\n    var options = {\n      headers: { \n        'Authorization': `TOKEN ${localStorage.getItem('token')}` \n      }\n    };\n    axios.post(url,{certids},options)\n    .then(response => {\n      if(isbtntrigger){\n        document.getElementById(\"searchForm\").reset();\n        setExpiryThreshold(0)\n        setIsBtnTrigger(false)\n      }\n      alert(response.data);\n      setCertids([])     \n    })\n    .catch(function (error) {\n      console.log(error.response.status,error.response);\n    });\n  }\n\n  const notifySingle = (i) => {\n    const id = certids[i];\n    setCertids([id])\n    notifyAll()\n  }\n  return (\n    <div className='admin-container'>\n      <h1 style={{marginTop:'20px'}}>Expiring Certificates</h1>\n      <form id='searchForm' onSubmit={handleSubmit}>\n        <input\n            required\n            className='tinput search-input' \n            type='number' \n            name='expiry days' \n            placeholder='Expiry days' \n            onChange={(e)=>setExpiryThreshold(e.target.value)}/>\n        <input type='submit' value='Search' className='submit search-btn'/>\n      </form>\n      <input type='submit' \n        onClick={()=>{if(expiryThreshold!=0){setIsBtnTrigger(true);notifyAll()}else alert('Please enter expiry days')}} \n        value='Notify All' className='submit search-btn'/>\n      {\n        isClicked || certs.length ? (\n          <div className=\"certcontainer\">\n            <Certificate certs={certs} notifySingle={notifySingle}/>\n          </div>\n        ) : isClicked===false ?\n          <h5>Enter the Expiry days and Search</h5>\n        : <h2>No Expired Certificates yet</h2>\n      }\n      \n    </div>\n  );\n}\n\nexport default AdminExpiring;","import { useState } from 'react';\nimport axios from 'axios'\n\nlet questionsegment = new Object();\nlet resid = 0;\n\nconst SetQuiz = () => {\n\n    const[quizForm,setQuizForm] = useState(true)\n\n    /* form inputs*/\n    const[name,setName]= useState('');\n    const[category,setCategory]=useState('GCP');\n    const [subCategory, setSubCategory] = useState('');\n    const [description, setDescription] = useState('');\n    const [timelimit, setTimelimit] = useState('0');\n    const [marks, setMarks] = useState('0');\n    const [totalques, setTotalQues] = useState(0);\n    const[questions, setQuestions] = useState(false);\n    const[responseid,setResponseId] = useState(0);\n    \n\n    /* set form defaults */\n    const clearquestionfields = () => {\n        setquestiontext('');\n        setexplanationtext('');\n        setSingleOptionAnswer('');\n        setMultipleanswerA('');\n        setMultipleanswerB('');\n        setMultipleanswerC('');\n        setMultipleanswerD('');\n    }\n\n    const clearformfields = () => {\n        setName('');\n        setCategory('');\n        setSubCategory('');\n        setDescription('');\n        setMarks('');\n        setTimelimit('');\n        setTotalQues(0);\n        \n    }\n\n    /* Quiz question set parameters */\n    const[questiontext,setquestiontext]=useState('')\n    const [explanationtext, setexplanationtext] = useState('')\n    const[qtype,setQType] = useState('single')\n    const [quesno, setQuesNo] = useState(1);\n    const[singleoptionanswer,setSingleOptionAnswer] = useState('')\n    const [multipleanswerA, setMultipleanswerA] = useState('')\n    const [multipleanswerB, setMultipleanswerB] = useState('')\n    const [multipleanswerC, setMultipleanswerC] = useState('')\n    const [multipleanswerD, setMultipleanswerD] = useState('')\n    const[qaobject, setqaobject] = useState([]);\n\n    /*GCP and AWS category */\n    const GCPcategory = ['compute engine', 'app engine', 'cloud function']\n    const AWScategory = ['instances', 'elastic beanstack', 'lambda functions']\n\n    \n    const handlefinishbutton =() => {\n        //console.log(questionsegment)\n        questionsegment.quizid=responseid;\n        console.log(responseid)\n        console.log(questionsegment)\n        \n        const url = \"https://credify.tk/addquestions\";\n\n        axios.post(url, questionsegment)\n            .then(function (response){\n                console.log(response.status);\n                //console.log(JSON.stringify(response.data.user))\n            })\n            .catch(function(err){\n                console.log(\"error message:\",err.message);\n            })\n        \n        alert('new quiz set added')\n        \n        setQuestions(false);\n        setQuizForm(true);\n        setQuesNo(1);\n    }\n\n    const addjson = (key,value) => {\n        questionsegment[key] = value;\n        //console.log(questionsegment)\n    }\n\n    const handleForm = (event) => {\n        event.preventDefault();\n\n        const quiz={\n            name:name,\n            category:category,\n            subcategory:subCategory,\n            description:description,\n            timelimit:timelimit,\n            marks:marks,\n            total_questions:totalques\n\n        }\n        console.log(quiz);\n        const url = \"https://credify.tk/addquiz\";\n\n        \n        \n        axios.post(url, quiz)\n            .then(function (response) {\n                console.log(response.status);\n                console.log((response.data.id))\n                setResponseId(response.data.id);\n                resid=response.data.id;\n            })\n            .catch(function (err) {\n                console.log(\"error message\", err.message);\n            })\n        \n        //console.log(\"funtion output\",quiz);\n        //console.log(\"total no of questions:\",totalques,quesno);\n        setTimeout(function () {\n            \n            questionsegment.quizid = resid\n            //console.log(responseid);\n            console.log(resid);\n            setQuestions(true)\n            //clearformfields();\n         }, (1000))\n        \n        //setQuizForm(true);\n    }\n\n    const handleques = (event) => {\n\n        \n\n        //console.log('button works')\n\n          \n        const optiontype = qtype;\n\n        //console.log(questiontext,explanationtext,singleoptionanswer);\n\n            if(optiontype==='single' && (quesno <= totalques)){\n                addjson(quesno,{\n                    text:questiontext,\n                    explanation:explanationtext,\n                    question_type:qtype,\n                    choices:singleoptionanswer\n                })\n\n                \n                clearquestionfields();\n                if(quesno < totalques){\n                setQuesNo(quesno+1);\n                }\n\n\n            }\n        if (optiontype === 'multiple' && (quesno <= totalques))\n\n            {\n\n            let correctA = document.querySelector(\".iscorrect-A\").checked\n            let correctB = document.querySelector(\".iscorrect-B\").checked\n            let correctC = document.querySelector(\".iscorrect-C\").checked\n            let correctD = document.querySelector(\".iscorrect-D\").checked\n\n                addjson(quesno,{\n                    text: questiontext,\n                    explanation: explanationtext,\n                    question_type: qtype,\n                    choices: [\n                        {\n                            text:multipleanswerA,\n                            is_correct: correctA\n                        },\n                        {\n                            text: multipleanswerB,\n                            is_correct: correctB\n                        },\n                        {\n                            text: multipleanswerC,\n                            is_correct: correctC\n                        },\n                        {\n                            text: multipleanswerD,\n                            is_correct: correctD\n                        }\n                    ]\n                })\n\n\n                clearquestionfields();\n                if (quesno < totalques) {\n                setQuesNo(quesno + 1);\n            }\n            }\n        //console.log(questionsegment);\n\n    }\n\n\n    return ( \n        <div className=\"set-quiz container\">\n            <h2>Set the quiz</h2>\n             {questions ? (\n\n\n\n                     <div className=\"set-questions question-container\">\n                    <div className=\"question-card\">\n                            <div className=\"set-question-heading\">Set Questions {quesno}/{totalques}</div>\n\n                            <div className=\"qa-block\">\n                                <input type=\"text\" className=\"question-text\"\n                                \n                                onChange={(e)=> setquestiontext(e.target.value)}\n                                placeholder=\"Enter question\"\n                                value={questiontext}\n                                />\n                            <input type=\"text\" className=\"explanation-text\"\n                                \n                                onChange={(e) => setexplanationtext(e.target.value)}\n                                placeholder=\"Enter answer explanation\"\n                                value={explanationtext}\n                            />\n                                <label className=\"option-type\">answer type:</label>\n                                <select \n                                className=\"qtype\"\n                                onChange={(e)=> setQType(e.target.value)}\n                                value={qtype}\n                                >\n                                    <option value=\"single\">Single option</option>\n                                    <option value=\"multiple\">multiple option</option>\n                                </select>\n                                {\n                                    (qtype===\"single\") ? \n                                    (\n                                        <div className=\"single-ans-container\">\n                                            <input type=\"text\" className=\"single-ans\"\n\n                                                className=\"qtype\"\n                                                onChange={(e) => setSingleOptionAnswer(e.target.value)}\n                                                value={singleoptionanswer}\n\n                                            />\n                                        </div>\n                                        \n                                    ) : (\n                                        <div className=\"multiple-ans-container\">\n                                            <div className=\"ans-checks\">\n                                                <input type=\"checkbox\" className=\"iscorrect-A\" />\n                                                <input type=\"text\" className=\"multiple-answer-A\" \n                                                placeholder=\"option A\"\n                                                onChange={(e) => setMultipleanswerA(e.target.value)}\n                                                value={multipleanswerA}\n                                                />\n                                            </div>\n                                            <div className=\"ans-checks\">\n                                                <input type=\"checkbox\" className=\"iscorrect-B\" />\n                                                <input type=\"text\" className=\"multiple-answer-B\"\n                                                    placeholder=\"option B\"\n                                                    onChange={(e) => setMultipleanswerB(e.target.value)}\n                                                    value={multipleanswerB}\n                                                />\n                                            </div>\n                                            <div className=\"ans-checks\">\n                                                <input type=\"checkbox\" className=\"iscorrect-C\" />\n                                                <input type=\"text\" className=\"multiple-answer-C\"\n                                                    placeholder=\"option C\"\n                                                    onChange={(e) => setMultipleanswerC(e.target.value)}\n                                                    value={multipleanswerC}\n                                                />\n                                            </div>\n                                            <div className=\"ans-checks\">\n                                                <input type=\"checkbox\" className=\"iscorrect-D\" />\n                                                <input type=\"text\" className=\"multiple-answer-D\"\n                                                    placeholder=\"option D\"\n                                                    onChange={(e) => setMultipleanswerD(e.target.value)}\n                                                    value={multipleanswerD}\n                                                />\n                                            </div>\n                                        </div>\n                                        \n                                    )\n                                }\n                                {(quesno>=totalques) ? (<div></div>) :\n                                 (\n                                    <button className=\"next-question-set\"\n                                        onClick={() => handleques()}\n                                    >next\n                                    </button>\n                                 )}\n                                \n                                {(quesno>=totalques) ? (\n                                        <button className=\"finishquestionset\"\n                                        onClick={\n                                            () => {\n                                                handleques();\n                                                handlefinishbutton();\n                                            }\n                                        }\n                                        >\n                                            finish\n                                        </button>\n                                ) : (\n                                    <></>\n                                )}\n                            </div>\n                    </div>\n                    \n                     </div>\n\n\n\n                 \n             ) :\n\n            ( quizForm ? \n            (<button className=\"quiz-form-button\"\n            onClick={() => setQuizForm(false)}\n            >\n                set a new quiz\n            </button>) :\n            (\n                <form action=\"\" className=\"set-quiz-form\">\n                    <div className=\"quiz-form-field\">\n                        <label className=\"form-label Name\">Name</label>\n                            <input type=\"text\" className=\"form-inputs Name\"\n                            required\n                            onChange = {(e)=> (setName(e.target.value))}\n                            value={name}\n                            />\n                    </div>\n                        <div className=\"quiz-form-field\">\n                            <label className=\"form-label Category\">Category</label>\n                            <select className=\"form-inputs Category\" \n                                required\n                                onChange={(e) => (setCategory(e.target.value))}\n                                value={category}\n                            >\n                                <option value=\"GCP\" >GCP</option>\n                                <option value=\"AWS\">AWS</option>\n                            </select>\n                        </div>\n                        <div className=\"quiz-form-field\">\n                            <label className=\"form-label Sub-Category\">Sub-Category</label>\n                            <select className=\"form-inputs Sub-Category\" \n                            required\n                            onChange={(e) => (setSubCategory(e.target.value))}\n                            value={subCategory}\n                            >\n                                {(category === 'GCP') ? (\n                                        GCPcategory.map((categ) => (\n                                            <option value={categ}>\n                                                {categ}\n                                            </option>\n                                        ))\n                                    ):\n                                (\n                                        AWScategory.map((categ) => (\n                                            <option value={categ}>\n                                                {categ}\n                                            </option>\n                                        ))\n                                    )}\n                                \n                            </select>\n                        </div>\n                        <div className=\"quiz-form-field\">\n                            <label className=\"form-label Description\">Description</label>\n                            <textarea className=\"form-inputs Description\" \n                                required\n                                onChange={(e) => (setDescription(e.target.value))}\n                                value={description}\n                            >{description}</textarea>\n                        </div>\n                        <div className=\"quiz-form-field\">\n                            <label className=\"form-label Time-Limit\">Time Limit</label>\n                            <input type=\"text\" className=\"form-inputs Time-Limit\" \n                                required\n                                onChange={(e) => (setTimelimit(e.target.value))}\n                                value={timelimit}\n                            />\n                        </div>\n                        <div className=\"quiz-form-field\">\n                            <label className=\"form-label Marks\">Per Question Marks</label>\n                            <input type=\"text\" className=\"form-inputs Marks\" \n                                required\n                                onChange={(e) => (setMarks(e.target.value))}\n                                value={marks}\n                            />\n                        </div>\n                        <div className=\"quiz-form-field\">\n                            <label className=\"form-label Total-Ques\">Total Questions</label>\n                            <input \n                            type=\"number\" id=\"quantity\" name=\"quantity\" min=\"1\" max=\"5\"\n                            className=\"form-inputs Total-Ques\" \n                                onChange={(e) => (setTotalQues(e.target.value))}\n                                value={totalques}\n                            />\n                        </div>\n                        <div className=\"quiz-form-field\">\n                            <button className=\"form-submit-button\" onClick={handleForm}>Create</button>\n                        </div>\n                </form>\n            )\n            )\n        }\n        </div>\n     );\n}\n \nexport default SetQuiz;","import { Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport { useEffect, useState } from \"react\";\n\nconst QuizHome = () => {\n\n        /*var tests = [\n                {\n                sno:1,\n                topic:\"GCP\",\n                totalQuestions:10,\n                marks:20,\n                timelimit:2\n                 }\n               \n        ];*/\n        \n        const url = \"https://credify.tk/getquiz\";\n        const [tests,setTests] = useState([]);\n\n\n        useEffect( () => {\n                axios.post(url, {\n                        category: \"GCP\"\n                })\n                        .then(function (response) {\n                                console.log(response.status);\n                                console.log((response.data))\n                                setTests(response.data);\n                                console.log(tests);\n                        })\n                        .catch(function (err) {\n                                console.log(\"error message\", err.message);\n                        })\n                },[]\n\n        )\n\n\n\n        console.log(tests);\n\n        return ( \n        <div className=\"Home container\">\n                <h2>All body parts are working</h2>\n                \n                        <table>\n                                <tr>\n                                        <th>Id</th>\n                                        <th>Name</th>\n                                        <th>sub Category</th>\n                                        <th>Marks</th>\n                                        <th>Time Limit</th>\n                                        <th>Total Questions</th>\n                                        <th>Start Test</th>\n                                </tr>\n\n                        {(tests.length == 0) ? (<div className=\"loading\">loading quiz...</div> ) :\n\n                        (tests.map((test) => (\n\n                                <tr>\n                                        <td>{test.id}</td>\n                                        <td>{test.name}</td>\n                                        <td>{test.subcategory}</td>\n                                        <td>{test.marks}</td>\n                                        <td>{test.timelimit}</td>\n                                        <td>{test.total_questions}</td>\n                                        <td><Link className=\"table-button\"\n                                                to={`/quiz/${test.id}`}\n                                        >begin</Link></td>\n                                </tr>\n\n                        )))}\n                         </table>       \n        </div>\n     );\n}\n \nexport default QuizHome;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\n\n\n\nexport default function Quiz() {\n    const { id } = useParams();\n    //console.log(id);\n\n    /*const questions = [\n        {\n            questionText: 'What is the capital of France?',\n            answerOptions: [\n                { answerText: 'New York', isCorrect: false },\n                { answerText: 'London', isCorrect: false },\n                { answerText: 'Paris', isCorrect: true },\n                { answerText: 'Dublin', isCorrect: false },\n            ]\n        }\n    ];*/\n\n    const [currentQuestion, setCurrentQuestion] = useState(0);\n    const [showScore, setShowScore] = useState(false);\n    const [score, setScore] = useState(0);\n    const [startQuiz, setStartQuiz] = useState(true);\n    \n    const url = \"https://credify.tk/getquestions\";\n\n    //console.log(id);\n    const [questions, setQuestions] = useState([]);\n\n\n    useEffect(() => {\n        axios.post(url, {\n            \"quizid\": id\n        })\n            .then(function (response) {\n                console.log(response.status);\n                console.log((response.data))\n                setQuestions(response.data)\n            })\n            .catch(function (err) {\n                console.log(\"error message\", err.message);\n            })\n    }, [startQuiz]\n\n    )\n\n\n\n    \n\n\n\n    const handleAnswerOptionClick = (isCorrect) => {\n        if (isCorrect) {\n            setScore(score + 1);\n        }\n\n        const nextQuestion = currentQuestion + 1;\n        const prevQuestion = currentQuestion - 1;\n        if(prevQuestion < 0){\n            setCurrentQuestion(0);\n        }\n        if (nextQuestion < questions.length) {\n            setCurrentQuestion(nextQuestion);\n        }\n        else {\n        setShowScore(true);\n        }\n\n    };\n    return (\n        <div className='app'>\n            {\n                startQuiz ? (<div className='instruction-section'>\n                    <h2>Instructions to be fetched</h2>\n                    <p className=\"instructions\">                      \n                        1. dont answer any questions &nbsp;\n                        2. make sure to close your eyes\n                    </p>\n                    <button onClick={() => setStartQuiz(false)}>begin test</button>\n                </div>):\n            (showScore ? (\n                <div className='score-section'>\n                    You scored {score} out of {questions.length}\n                </div>\n            ) : (\n\n                    ( questions.length <=0) ? (\n                        <div className=\"loading\">loading questions...\n                        {questions.length}</div>\n                    ) : (\n\n                    <>\n                        <div className='question-section'>\n                            <div className='question-count'>\n                                <span>Question {currentQuestion + 1}</span>/{questions.length}\n                            </div>\n                            <div className='question-text'>{questions[currentQuestion].text}</div>\n                        </div>\n                        <div className='answer-section'>\n                            {questions[currentQuestion].choices.map((answerOption) => (\n                                <button onClick={() => handleAnswerOptionClick(answerOption.is_correct)}>{answerOption.text}</button>\n                            ))}\n                        </div>\n                    </>)\n                ))}\n        </div>\n    );\n}","import React from 'react';\nimport { BrowserRouter as Router,Switch, Route } from 'react-router-dom';\nimport Login from './components/Login/Login';\nimport Register from './components/Register/Register';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport Home from './components/Home/Home';\nimport Upload from './components/Upload/Upload';\nimport Profile from './components/Profile/Profile';\nimport AdminHome from './components/AdminHome/AdminHome'\nimport AdminDashboard from './components/AdminDashboard/AdminDashboard'\nimport AdminAllCerts from './components/AdminAllCerts/AdminAllCerts'\nimport Users from './components/Users/Users'\nimport UserCertificates from './components/UserCertificates/UserCertificates'\nimport SendMail from './components/SendMail/SendMail'\nimport PrivateRoute from './routes/PrivateRoute';\nimport PublicRoute from './routes/PublicRoute';\nimport AdminRoute from './routes/AdminRoute';\nimport AdminExpired from './components/AdminExpired/AdminExpired';\nimport AdminExpiring from './components/AdminExpiring/AdminExpiring';\nimport SetQuiz from './components/AdminQuiz/SetQuiz' \nimport QuizHome from './components/UserQuiz/QuizHome' \nimport Quiz from './components/UserQuiz/Quiz' \n\n\nconst App = () => {\n  return (\n    <Router>\n      <PublicRoute restricted={false} component={Home} path=\"/\" exact />\n      <PublicRoute restricted={true} component={Register} path=\"/register\" exact />\n      <PublicRoute restricted={true} component={Login} path=\"/login\" exact />\n      <AdminRoute component={AdminHome} path=\"/admin\" exact />\n      <AdminRoute component={AdminDashboard} path=\"/admindash\" exact />\n      <AdminRoute component={AdminAllCerts} path=\"/adminallcerts\" exact />\n      <AdminRoute component={AdminExpired} path=\"/adminexpired\" exact />\n      <AdminRoute component={AdminExpiring} path=\"/adminexpiring\" exact />\n      <AdminRoute component={Users} path=\"/users\" exact />\n      <AdminRoute component={UserCertificates} path=\"/usercerts/:userid\" exact />\n      <AdminRoute component={SetQuiz} path=\"/adminsetquiz\" exact />\n      <AdminRoute component={SendMail} path=\"/sendmail\" exact />\n      <PrivateRoute component={Dashboard} path=\"/dashboard\" exact />\n      <PrivateRoute component={Upload} path=\"/upload\" exact />\n      <PrivateRoute component={Profile} path=\"/profile\" exact />\n      <PrivateRoute component={QuizHome} path=\"/quizhome\" exact />\n      <PrivateRoute component={Quiz} path=\"/quiz/:id\" exact />\n    </Router>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);"],"sourceRoot":""}